{"version":3,"sources":["webpack:///./leetcode/23_合并K个升序链表.md","webpack:///./leetcode/23_合并K个升序链表.md?4aba","webpack:///./leetcode/23_合并K个升序链表.md?0115"],"names":[],"mappings":"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","file":"assets/js/874.21e872f2.js","sourcesContent":["import { render, staticRenderFns } from \"./23_合并K个升序链表.md?vue&type=template&id=79afb29c&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"81e7108c-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??ref--1-1!../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./23_合并K个升序链表.md?vue&type=template&id=79afb29c&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"合并k个升序链表\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#合并k个升序链表\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://leetcode-cn.com/problems/merge-k-sorted-lists/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"合并K个升序链表\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"难度：Hard\")]),_vm._v(\" \"),_c('li',[_vm._v(\"标签：链表 排序 二分法 递归 优先级队列 小顶堆\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tip:\\n\"),_c('ul',[_c('li',[_vm._v(\"这道题输入比较阴，注意数组长度为 0 和 1 时的特殊处理\")]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://leetcode-cn.com/problems/merge-two-sorted-lists/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"21.合并两个有序链表\"),_c('OutboundLink')],1),_vm._v(\" 已经完成两个有序链表的合并过程，可以直接复用\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"设定: 输入数组长度为 k, 每个元素长度为 n.\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"刷题思路\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#刷题思路\"}},[_vm._v(\"#\")]),_vm._v(\" 刷题思路\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"[x] 两两合并 O(k^2 * n)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[x] 二分法递归 O(klogk * n)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[ ] 优先级队列 O(klogk * n)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[ ] 暴力K指针\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[ ] 小顶堆\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"方法-1-两两合并\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-1-两两合并\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 1 两两合并\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 遍历入参, 两两合并（每轮都生成新的链表）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(k^2 *N) 计算次数渐进趋势为 \"),_c('code',[_vm._v(\"2n+3n+4n+...+k*n\")]),_vm._v(\", 即 \"),_c('code',[_vm._v(\"k^2 * n\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(1)\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果:\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：356 ms, 在所有 JavaScript 提交中击败了22.60%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：45.5 MB, 在所有 JavaScript 提交中击败了7.72%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"mergeKLists\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"lists\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"length \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"===\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"length \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"===\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"reduce\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" b\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"mergeTwoLists\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"mergeTwoLists\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" l2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" head \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"else\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            l2 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n        curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"?\")]),_vm._v(\" l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" l2\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"方法-2-二分法递归\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-2-二分法递归\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 2 二分法递归\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(klogk * N) 对入参数组进行二分，复杂度为O(klogk)，乘上复杂度为 O(N) 的合并函数.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(logk) 存在递归调用栈, 由于是对入参数组进行二分递归，故计算为 O(logk).\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果:\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：96 ms, 在所有 JavaScript 提交中击败了97.27%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：44.4 MB, 在所有 JavaScript 提交中击败了17.46%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"/**\\n * Definition for singly-linked list.\\n * function ListNode(val, next) {\\n *     this.val = (val===undefined ? 0 : val)\\n *     this.next = (next===undefined ? null : next)\\n * }\\n */\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"/**\\n * @param {ListNode[]} lists\\n * @return {ListNode}\\n */\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"mergeKLists\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"lists\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" len \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"length\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"len \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"===\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"length\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" start\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" end\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"end \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"===\")]),_vm._v(\" start\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"start\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" mid \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" Math\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"floor\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"start \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" end\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"/\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"mergeTwoLists\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" start\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" mid\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"lists\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" mid\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" end\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"mergeTwoLists\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" l2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" head \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l1\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"else\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            l2 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n        curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"?\")]),_vm._v(\" l1 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" l2\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_c('strong',[_c('a',{attrs:{\"href\":\"https://github.com/Nodreame/leetcode-js\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS刷题记录 Leetcode-js\"),_c('OutboundLink')],1)]),_vm._v(\" 每周都会更新刷题心得或者题解, 你的点赞或 star 都将助力我产出更好内容~\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}