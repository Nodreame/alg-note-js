(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1312],{

/***/ "./leetcode/61_旋转链表.md":
/*!*****************************!*\
  !*** ./leetcode/61_旋转链表.md ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./61_旋转链表.md?vue&type=template&id=892c154e& */ "./leetcode/61_旋转链表.md?vue&type=template&id=892c154e&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");

var script = {}


/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(
  script,
  _61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./leetcode/61_旋转链表.md?vue&type=template&id=892c154e&":
/*!************************************************************!*\
  !*** ./leetcode/61_旋转链表.md?vue&type=template&id=892c154e& ***!
  \************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_81e7108c_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"81e7108c-vue-loader-template"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib??ref--1-1!../node_modules/@vuepress/markdown-loader??ref--1-2!./61_旋转链表.md?vue&type=template&id=892c154e& */ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"81e7108c-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./leetcode/61_旋转链表.md?vue&type=template&id=892c154e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_81e7108c_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_81e7108c_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_61_md_vue_type_template_id_892c154e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"81e7108c-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./leetcode/61_旋转链表.md?vue&type=template&id=892c154e&":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"81e7108c-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??ref--1-1!./node_modules/@vuepress/markdown-loader??ref--1-2!./leetcode/61_旋转链表.md?vue&type=template&id=892c154e& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{"slot-key":_vm.$parent.slotKey}},[_c('h1',{attrs:{"id":"旋转链表"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#旋转链表"}},[_vm._v("#")]),_vm._v(" "),_c('a',{attrs:{"href":"https://leetcode-cn.com/problems/rotate-list/","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("旋转链表"),_c('OutboundLink')],1)]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("难度：Medium")]),_vm._v(" "),_c('li',[_vm._v("标签：链表 环链表")])]),_vm._v(" "),_c('h2',{attrs:{"id":"刷题思路"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#刷题思路"}},[_vm._v("#")]),_vm._v(" 刷题思路")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("[x] 迭代")]),_vm._v(" "),_c('li',[_vm._v("[x] 环链表")])]),_vm._v(" "),_c('h3',{attrs:{"id":"方法-1-迭代"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#方法-1-迭代"}},[_vm._v("#")]),_vm._v(" 方法 1 迭代")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("思路: 常规思路按照题意解题\n"),_c('ul',[_c('li',[_c('ol',[_c('li',[_vm._v("计算链表长度，k%n得到右移位置个数减少冗余计算，长度减去右移个数得到\"进到旋转中点所需步数\"")])])]),_vm._v(" "),_c('li',[_c('ol',{attrs:{"start":"2"}},[_c('li',[_vm._v("加入哨兵头方便计算，得到旋转中点")])])]),_vm._v(" "),_c('li',[_c('ol',{attrs:{"start":"3"}},[_c('li',[_vm._v("开始旋转，哨兵接旋转中点后面部分，尾节点尾接断尾的head")])])])])]),_vm._v(" "),_c('li',[_vm._v("复杂度：\n"),_c('ul',[_c('li',[_vm._v("时间 O(N). 一趟遍历计算长度 O(N) + 一趟遍历找中点&找结尾 O(N)")]),_vm._v(" "),_c('li',[_vm._v("空间 O(1)")])])])]),_vm._v(" "),_c('div',{staticClass:"language-js extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-js"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("var")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function-variable function"}},[_vm._v("rotateRight")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("function")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token parameter"}},[_vm._v("head"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" k")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 1) 计算链表长度，k%n得到右移位置个数减少冗余计算，长度减去右移个数得到旋转中点")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" len "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("0")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" curr "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("while")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("len"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("len"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("+")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("1")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v("\n    k "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" k "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("%")]),_vm._v(" len\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" left "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" len "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("-")]),_vm._v(" k "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 推进到旋转中点所需步数")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 2）加入哨兵头方便计算，得到旋转中点")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" newHead "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("ListNode")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("null")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    newHead"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" mid "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" newHead\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("for")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("0")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("<")]),_vm._v("left"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("++")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" mid "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" mid"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 3) 开始旋转，")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" mid"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next\n    mid"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("null")]),_vm._v("\n    newHead"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" next\n    curr "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" newHead\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("while")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" curr "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next\n    curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" newHead"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n")])])]),_c('h3',{attrs:{"id":"方法-2-环链表"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#方法-2-环链表"}},[_vm._v("#")]),_vm._v(" 方法 2 环链表")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v("思路: 如果链表最后一个节点尾接头链表头则可以形成环，由方法1可知，只需要找到起点作为头，在终点处断链即可:\n"),_c('ul',[_c('li',[_c('ol',[_c('li',[_vm._v("形成环 & 计算链表长度;")])])]),_vm._v(" "),_c('li',[_c('ol',{attrs:{"start":"2"}},[_c('li',[_vm._v("计算所需推进步数;")])])]),_vm._v(" "),_c('li',[_c('ol',{attrs:{"start":"3"}},[_c('li',[_vm._v("推进得到起点，然后推进链表长度后断链")])])])])]),_vm._v(" "),_c('li',[_vm._v("复杂度：\n"),_c('ul',[_c('li',[_vm._v("时间 O(N). 遍历计算长度 O(N) + 计算起点 O(N) + 找到终点 O(N).")]),_vm._v(" "),_c('li',[_vm._v("空间 O(1)")])])])]),_vm._v(" "),_c('div',{staticClass:"language-js extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-js"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("var")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function-variable function"}},[_vm._v("rotateRight")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("function")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token parameter"}},[_vm._v("head"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" k")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("if")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("!")]),_vm._v("head "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("||")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("!")]),_vm._v("head"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// - 1) 形成环 & 计算链表长度;")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" len"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("head"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("1")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("while")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" len"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" len"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("+")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("1")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// - 2) 计算所需推进步数;")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" target "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" len "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("-")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("k "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("%")]),_vm._v(" len"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// - 3) 推进得到起点，然后推进链表长度后断链")]),_vm._v("\n    curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" res "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" head\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("for")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("0")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("<")]),_vm._v("target"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("++")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" res "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" res"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 计算起点")]),_vm._v("\n    curr "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" res\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("for")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("let")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("1")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("<")]),_vm._v("len"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v(" i"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("++")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" curr "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 计算终点前一位")]),_vm._v("\n    curr"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("next "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("null")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// 中断环状链表")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" res\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n")])])]),_c('p',[_c('strong',[_c('a',{attrs:{"href":"https://github.com/Nodreame/leetcode-js","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("JS刷题记录 Leetcode-js"),_c('OutboundLink')],1)]),_vm._v(" 每周都会更新刷题心得或者题解, 你的点赞或 star 都将助力我产出更好内容~")])])}
var staticRenderFns = []



/***/ })

}]);
//# sourceMappingURL=1312.fc6eb4ad.js.map