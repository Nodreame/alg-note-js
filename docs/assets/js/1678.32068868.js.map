{"version":3,"sources":["webpack:///./leetcode/94_二叉树的中序遍历.md","webpack:///./leetcode/94_二叉树的中序遍历.md?738f","webpack:///./leetcode/94_二叉树的中序遍历.md?39e2"],"names":[],"mappings":"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","file":"assets/js/1678.32068868.js","sourcesContent":["import { render, staticRenderFns } from \"./94_二叉树的中序遍历.md?vue&type=template&id=31992244&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"81e7108c-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??ref--1-1!../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./94_二叉树的中序遍历.md?vue&type=template&id=31992244&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"二叉树的中序遍历\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#二叉树的中序遍历\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"二叉树的中序遍历\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"难度：Medium\")]),_vm._v(\" \"),_c('li',[_vm._v(\"标签：递归 DFS\")]),_vm._v(\" \"),_c('li',[_vm._v(\"题意解析：二叉树的中序排列实现，流程是 左-》根-》右.\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"刷题思路\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#刷题思路\"}},[_vm._v(\"#\")]),_vm._v(\" 刷题思路\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"[x] 模板递归（DFS）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[x] 含状态的模板迭代法(DFS)\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"方法-1-模板递归-dfs\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-1-模板递归-dfs\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 1 模板递归（DFS）\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路：用数组res存储结果，递归方法以节点node和结果数组res作为参数.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间：遍历整个二叉树故时间复杂度为 O(n)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间：结果数组是必备空间所以不占复杂度，占空间的是递归调用栈，近似于树的深度h\\n\"),_c('ul',[_c('li',[_vm._v(\"当树是平衡二叉树时，树的深度为logn，故其空间复杂度为O(logn)；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"当树严重左偏或者右偏的时候，树的深度为n，故其空间复杂度为O(n);\")])])])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果:\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：88 ms, 在所有 JavaScript 提交中击败了38.35%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：37.4 MB, 在所有 JavaScript 提交中击败了21.07%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"inorderTraversal\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"root\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" res \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" res\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"left\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"left\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"push\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"right\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"recursion\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"right\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"方法-2-含状态的模板迭代法-dfs\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-2-含状态的模板迭代法-dfs\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 2 含状态的模板迭代法(DFS)\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 用栈辅助存储未处理的值,每个节点加上标志位flag,标志位的作用是标志节点的身份是否为处理完成的节点.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度:\\n\"),_c('ul',[_c('li',[_vm._v(\"时间: O(n). 耗时点在于每个结点会经历两次遍历(塞入->弹出->标记->塞入->弹出)，也就是时间复杂度是O(2n);\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间: O(n). 分析同上.\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果：\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：88 ms, 在所有 JavaScript 提交中击败了38.35%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：37 MB, 在所有 JavaScript 提交中击败了63.94%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"inorderTraversal\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"root\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" res \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" stack \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"root\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"stack\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"length \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" node \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" stack\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"pop\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"flag\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"push\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"val\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// flag=true 表示这次要访问的是该节点，可以打印或者做其他处理\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"else\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// flag=false 表示暂时没空访问该节点，只能先将其入栈等待之后处理\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 中序顺序：左-》根-》右\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 进栈顺序：右-》根-》左(与出栈顺序相反)\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"right\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" stack\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"push\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"right\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"flag \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 先标记再进栈\")]),_vm._v(\"\\n            stack\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"push\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"left\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" stack\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"push\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"node\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"left\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_c('strong',[_c('a',{attrs:{\"href\":\"https://github.com/Nodreame/leetcode-js\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS刷题记录 Leetcode-js\"),_c('OutboundLink')],1)]),_vm._v(\" 每周都会更新刷题心得或者题解, 你的点赞或 star 都将助力我产出更好内容~\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}