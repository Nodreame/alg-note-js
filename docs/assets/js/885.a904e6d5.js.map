{"version":3,"sources":["webpack:///./leetcode/24_两两交换链表中的节点.md","webpack:///./leetcode/24_两两交换链表中的节点.md?05ff","webpack:///./leetcode/24_两两交换链表中的节点.md?2a9f"],"names":[],"mappings":"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","file":"assets/js/885.a904e6d5.js","sourcesContent":["import { render, staticRenderFns } from \"./24_两两交换链表中的节点.md?vue&type=template&id=30e8a94e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"81e7108c-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??ref--1-1!../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./24_两两交换链表中的节点.md?vue&type=template&id=30e8a94e&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"两两交换链表中的节点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#两两交换链表中的节点\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://leetcode-cn.com/problems/swap-nodes-in-pairs/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"两两交换链表中的节点\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"难度：Medium\")]),_vm._v(\" \"),_c('li',[_vm._v(\"标签：链表反转 递归\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"刷题思路\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#刷题思路\"}},[_vm._v(\"#\")]),_vm._v(\" 刷题思路\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"[x] 迭代法\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[x] 自递归法\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"方法-1-迭代法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-1-迭代法\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 1 迭代法\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 迭代法.\\n\"),_c('ul',[_c('li',[_vm._v(\"思路: 使用哨兵头节点， 推进指针prev从当前哨兵节点位置出发，故prev.next=head，确认接下来两个节点(prev.next, prev.next.next)是否为空\\n\"),_c('ul',[_c('li',[_vm._v(\"若不为空则开始交换, 交换后curr推进一格, prev推进两格, 循环继续;\")]),_vm._v(\" \"),_c('li',[_vm._v(\"若有一个或一个以上为空则直接返回哨兵head节点的next;\")])])])])]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(N) 一次遍历\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(1)\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果：\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：76 ms, 在所有 JavaScript 提交中击败了72.69%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：37.2 MB, 在所有 JavaScript 提交中击败了21.95%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"swapPairs\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"head\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 1. head 链表长度大于等于 2\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"||\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" newHead \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"prev\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// prev 从虚拟哨兵节点开始，curr 从第一个真实节点开始\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// prev -> curr后一个， curr后一个 -> curr， curr -> prev\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"prev\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n        curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 交换后 curr 处于原来 curr.next 的位置上，故只需推进一格即可到达下一组第一节点\")]),_vm._v(\"\\n        prev \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" prev\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 交换后 prev 位置不变，故需推进两格才能到达下一组的前面\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"方法-2-自递归法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-2-自递归法\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 2 自递归法\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 明确输入、终止条件、返回值、递归方法逻辑\\n\"),_c('ul',[_c('li',[_vm._v(\"输入：自递归的输入恒为第一个节点;\")]),_vm._v(\" \"),_c('li',[_vm._v(\"终止条件：剩余长度小于2;\")]),_vm._v(\" \"),_c('li',[_vm._v(\"返回值：已经完成交换的后续链表;\")]),_vm._v(\" \"),_c('li',[_vm._v(\"递归方法逻辑：同上面方法，res = 1.next && 1.next=已完成交换的后续链表 && res.next = 1\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(N). 从最底层两个互换到最高层，每层时间复杂度均为O(1), 共 N/2 层故时间复杂度为 O(N/2).\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(N). 递归调用栈等同于层级, 即 O(N/2).\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"结果：\\n\"),_c('ul',[_c('li',[_vm._v(\"执行用时：92 ms, 在所有 JavaScript 提交中击败了20.98%的用户\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内存消耗：37.2 MB, 在所有 JavaScript 提交中击败了23.96%的用户\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"swapPairs\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"head\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 1. head 链表长度大于等于 2\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"||\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 2. 拿第二节点\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" newHead \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 3. 第一节点指向第三节点, 第三节点递归处理\")]),_vm._v(\"\\n    head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"swapPairs\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 4. 原第二节点指向原第一节点\")]),_vm._v(\"\\n    newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 5. 返回原第二节点(翻转后为第一节点)\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" newHead\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_c('strong',[_c('a',{attrs:{\"href\":\"https://github.com/Nodreame/leetcode-js\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS刷题记录 Leetcode-js\"),_c('OutboundLink')],1)]),_vm._v(\" 每周都会更新刷题心得或者题解, 你的点赞或 star 都将助力我产出更好内容~\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}