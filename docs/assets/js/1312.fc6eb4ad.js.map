{"version":3,"sources":["webpack:///./leetcode/61_旋转链表.md","webpack:///./leetcode/61_旋转链表.md?8880","webpack:///./leetcode/61_旋转链表.md?d628"],"names":[],"mappings":"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","file":"assets/js/1312.fc6eb4ad.js","sourcesContent":["import { render, staticRenderFns } from \"./61_旋转链表.md?vue&type=template&id=892c154e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"81e7108c-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??ref--1-1!../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./61_旋转链表.md?vue&type=template&id=892c154e&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"旋转链表\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#旋转链表\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://leetcode-cn.com/problems/rotate-list/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"旋转链表\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"难度：Medium\")]),_vm._v(\" \"),_c('li',[_vm._v(\"标签：链表 环链表\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"刷题思路\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#刷题思路\"}},[_vm._v(\"#\")]),_vm._v(\" 刷题思路\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"[x] 迭代\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[x] 环链表\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"方法-1-迭代\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-1-迭代\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 1 迭代\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 常规思路按照题意解题\\n\"),_c('ul',[_c('li',[_c('ol',[_c('li',[_vm._v(\"计算链表长度，k%n得到右移位置个数减少冗余计算，长度减去右移个数得到\\\"进到旋转中点所需步数\\\"\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"加入哨兵头方便计算，得到旋转中点\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"3\"}},[_c('li',[_vm._v(\"开始旋转，哨兵接旋转中点后面部分，尾节点尾接断尾的head\")])])])])]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(N). 一趟遍历计算长度 O(N) + 一趟遍历找中点&找结尾 O(N)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(1)\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"rotateRight\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" k\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 1) 计算链表长度，k%n得到右移位置个数减少冗余计算，长度减去右移个数得到旋转中点\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" len \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"len\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"len\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    k \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" k \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"%\")]),_vm._v(\" len\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" left \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" len \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_vm._v(\" k \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 推进到旋转中点所需步数\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 2）加入哨兵头方便计算，得到旋转中点\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" newHead \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"ListNode\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" mid \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" newHead\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"left\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" mid \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" mid\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 3) 开始旋转，\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" mid\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    mid\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_vm._v(\"\\n    newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" next\\n    curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" newHead\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n    curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" newHead\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"方法-2-环链表\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#方法-2-环链表\"}},[_vm._v(\"#\")]),_vm._v(\" 方法 2 环链表\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"思路: 如果链表最后一个节点尾接头链表头则可以形成环，由方法1可知，只需要找到起点作为头，在终点处断链即可:\\n\"),_c('ul',[_c('li',[_c('ol',[_c('li',[_vm._v(\"形成环 & 计算链表长度;\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"计算所需推进步数;\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"3\"}},[_c('li',[_vm._v(\"推进得到起点，然后推进链表长度后断链\")])])])])]),_vm._v(\" \"),_c('li',[_vm._v(\"复杂度：\\n\"),_c('ul',[_c('li',[_vm._v(\"时间 O(N). 遍历计算长度 O(N) + 计算起点 O(N) + 找到终点 O(N).\")]),_vm._v(\" \"),_c('li',[_vm._v(\"空间 O(1)\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"rotateRight\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" k\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"||\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// - 1) 形成环 & 计算链表长度;\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" len\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"head\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" len\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" len\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// - 2) 计算所需推进步数;\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" target \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" len \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"k \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"%\")]),_vm._v(\" len\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// - 3) 推进得到起点，然后推进链表长度后断链\")]),_vm._v(\"\\n    curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" res \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" head\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"target\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" res \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" res\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 计算起点\")]),_vm._v(\"\\n    curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" res\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"len\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" curr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 计算终点前一位\")]),_vm._v(\"\\n    curr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"next \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"null\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 中断环状链表\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_c('strong',[_c('a',{attrs:{\"href\":\"https://github.com/Nodreame/leetcode-js\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"JS刷题记录 Leetcode-js\"),_c('OutboundLink')],1)]),_vm._v(\" 每周都会更新刷题心得或者题解, 你的点赞或 star 都将助力我产出更好内容~\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}